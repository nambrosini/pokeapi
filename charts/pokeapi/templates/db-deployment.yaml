apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: postgres
          image: postgres
          envFrom:
            - secretRef:
                name: db-secret
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresqlDatabase }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: db-volume
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 5
            timeoutSeconds: 1
      volumes:
        - name: db-volume
          persistentVolumeClaim:
            claimName: {{ .Values.postgresql.persistence.name }}
